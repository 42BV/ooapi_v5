/*
 * Open Education API
 * OpenAPI (fka Swagger) specification for the Open Education API.  <figure>  <a target=\"_blank\" href=\"OOAPIv5_model.png\">   <img src=\"OOAPIv5_model.png\" alt=\"OOAPI information model that feeds OOAPI specification\" width=\"70%\" class=\"img-responsive\">   </a>   <figcaption> OOAPI information model that feeds OOAPI specification (click to enlage)</figcaption> </figure>  The model provides an overview of how the objects on which the API is specified are related. The overarching concept educations is not found in the in the end points of the API. The smaller concepts of programOffering, courseOffering and conceptOffering are all found in the offering endpoint. The different types of association can all be found in the association endpoint.  The original file for this model can be found <a target=\"_blank\" href=\"OOAPIv5_model_v0.4.drawio\">here</a>  The program relations object is not found as a separate endpoint but relations between programs can be found within the program endpoint by expanding that endpoint.  Information about earlier meetings and presentations can be found <a target=\"_blank\" href=\"https://github.com/open-education-api/notulen\">here</a>  Information on the EDU-API model that was also used for this api is shown <a target=\"_blank\" href=\"eduapi.png\">here</a>
 *
 * The version of the OpenAPI document: 5.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nl.vorsen.ooapi.v5;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ComponentOfferingAllOf
 */
@JsonPropertyOrder({
        ComponentOfferingAllOf.JSON_PROPERTY_START_DATE_TIME,
        ComponentOfferingAllOf.JSON_PROPERTY_END_DATE_TIME,
        ComponentOfferingAllOf.JSON_PROPERTY_ENROLL_START_DATE,
        ComponentOfferingAllOf.JSON_PROPERTY_ENROLL_END_DATE,
        ComponentOfferingAllOf.JSON_PROPERTY_RESULT_WEIGHT,
        ComponentOfferingAllOf.JSON_PROPERTY_ADDRESSES,
        ComponentOfferingAllOf.JSON_PROPERTY_PRICE_INFORMATION,
        ComponentOfferingAllOf.JSON_PROPERTY_ROOM,
        ComponentOfferingAllOf.JSON_PROPERTY_COMPONENT,
        ComponentOfferingAllOf.JSON_PROPERTY_COURSE_OFFERING,
        ComponentOfferingAllOf.JSON_PROPERTY_ORGANIZATION,
        ComponentOfferingAllOf.JSON_PROPERTY_ACADEMIC_SESSION
})
@JsonTypeName("ComponentOffering_allOf")

public class ComponentOfferingAllOf {
    public static final String JSON_PROPERTY_START_DATE_TIME = "startDateTime";
    public static final String JSON_PROPERTY_END_DATE_TIME = "endDateTime";
    public static final String JSON_PROPERTY_ENROLL_START_DATE = "enrollStartDate";
    public static final String JSON_PROPERTY_ENROLL_END_DATE = "enrollEndDate";
    public static final String JSON_PROPERTY_RESULT_WEIGHT = "resultWeight";
    public static final String JSON_PROPERTY_ADDRESSES = "addresses";
    public static final String JSON_PROPERTY_PRICE_INFORMATION = "priceInformation";
    public static final String JSON_PROPERTY_ROOM = "room";
    public static final String JSON_PROPERTY_COMPONENT = "component";
    public static final String JSON_PROPERTY_COURSE_OFFERING = "courseOffering";
    public static final String JSON_PROPERTY_ORGANIZATION = "organization";
    public static final String JSON_PROPERTY_ACADEMIC_SESSION = "academicSession";
    private OffsetDateTime startDateTime;
    private OffsetDateTime endDateTime;
    private LocalDate enrollStartDate;
    private LocalDate enrollEndDate;
    private Integer resultWeight;
    private List<Address> addresses = null;
    private List<Cost> priceInformation = null;
    private Room room;
    private String component;
    private String courseOffering;
    private String organization;
    private String academicSession;

    public ComponentOfferingAllOf() {
    }

    public ComponentOfferingAllOf startDateTime(OffsetDateTime startDateTime) {

        this.startDateTime = startDateTime;
        return this;
    }

    /**
     * The moment on which this offering starts, RFC3339 (date-time)
     * @return startDateTime
     **/
    @NotNull

    @JsonProperty(JSON_PROPERTY_START_DATE_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public OffsetDateTime getStartDateTime() {
        return startDateTime;
    }

    @JsonProperty(JSON_PROPERTY_START_DATE_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStartDateTime(OffsetDateTime startDateTime) {
        this.startDateTime = startDateTime;
    }

    public ComponentOfferingAllOf endDateTime(OffsetDateTime endDateTime) {

        this.endDateTime = endDateTime;
        return this;
    }

    /**
     * The moment on which this offering ends, RFC3339 (date-time)
     * @return endDateTime
     **/
    @NotNull

    @JsonProperty(JSON_PROPERTY_END_DATE_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public OffsetDateTime getEndDateTime() {
        return endDateTime;
    }

    @JsonProperty(JSON_PROPERTY_END_DATE_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEndDateTime(OffsetDateTime endDateTime) {
        this.endDateTime = endDateTime;
    }

    public ComponentOfferingAllOf enrollStartDate(LocalDate enrollStartDate) {

        this.enrollStartDate = enrollStartDate;
        return this;
    }

    /**
     * The first day on which a student can enroll for this course.
     * @return enrollStartDate
     **/

    @JsonProperty(JSON_PROPERTY_ENROLL_START_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getEnrollStartDate() {
        return enrollStartDate;
    }

    @JsonProperty(JSON_PROPERTY_ENROLL_START_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEnrollStartDate(LocalDate enrollStartDate) {
        this.enrollStartDate = enrollStartDate;
    }

    public ComponentOfferingAllOf enrollEndDate(LocalDate enrollEndDate) {

        this.enrollEndDate = enrollEndDate;
        return this;
    }

    /**
     * The last day on which a student can enroll for this course.
     * @return enrollEndDate
     **/

    @JsonProperty(JSON_PROPERTY_ENROLL_END_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalDate getEnrollEndDate() {
        return enrollEndDate;
    }

    @JsonProperty(JSON_PROPERTY_ENROLL_END_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEnrollEndDate(LocalDate enrollEndDate) {
        this.enrollEndDate = enrollEndDate;
    }

    public ComponentOfferingAllOf resultWeight(Integer resultWeight) {

        this.resultWeight = resultWeight;
        return this;
    }

    /**
     * The result weight of this offering
     * minimum: 0
     * maximum: 100
     * @return resultWeight
     **/

    @JsonProperty(JSON_PROPERTY_RESULT_WEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getResultWeight() {
        return resultWeight;
    }

    @JsonProperty(JSON_PROPERTY_RESULT_WEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResultWeight(Integer resultWeight) {
        this.resultWeight = resultWeight;
    }

    public ComponentOfferingAllOf addresses(List<Address> addresses) {

        this.addresses = addresses;
        return this;
    }

    public ComponentOfferingAllOf addAddressesItem(Address addressesItem) {
        if (this.addresses == null) {
            this.addresses = new ArrayList<>();
        }
        this.addresses.add(addressesItem);
        return this;
    }

    /**
     * Addresses for this offering
     * @return addresses
     **/

    @JsonProperty(JSON_PROPERTY_ADDRESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Address> getAddresses() {
        return addresses;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAddresses(List<Address> addresses) {
        this.addresses = addresses;
    }

    public ComponentOfferingAllOf priceInformation(List<Cost> priceInformation) {

        this.priceInformation = priceInformation;
        return this;
    }

    public ComponentOfferingAllOf addPriceInformationItem(Cost priceInformationItem) {
        if (this.priceInformation == null) {
            this.priceInformation = new ArrayList<>();
        }
        this.priceInformation.add(priceInformationItem);
        return this;
    }

    /**
     * Price information for this offering.
     * @return priceInformation
     **/

    @JsonProperty(JSON_PROPERTY_PRICE_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Cost> getPriceInformation() {
        return priceInformation;
    }

    @JsonProperty(JSON_PROPERTY_PRICE_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPriceInformation(List<Cost> priceInformation) {
        this.priceInformation = priceInformation;
    }

    public ComponentOfferingAllOf room(Room room) {

        this.room = room;
        return this;
    }

    /**
     * Get room
     * @return room
     **/

    @JsonProperty(JSON_PROPERTY_ROOM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Room getRoom() {
        return room;
    }

    @JsonProperty(JSON_PROPERTY_ROOM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRoom(Room room) {
        this.room = room;
    }

    public ComponentOfferingAllOf component(String component) {

        this.component = component;
        return this;
    }

    /**
     * The component that is offered in this componentoffering. [&#x60;expandable&#x60;](#tag/component_model) By default only the &#x60;componentId&#x60; (a string) is returned. If the client requested an expansion of &#x60;component&#x60; the full component object should be returned.
     * @return component
     **/

    @JsonProperty(JSON_PROPERTY_COMPONENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getComponent() {
        return component;
    }

    @JsonProperty(JSON_PROPERTY_COMPONENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setComponent(String component) {
        this.component = component;
    }

    public ComponentOfferingAllOf courseOffering(String courseOffering) {

        this.courseOffering = courseOffering;
        return this;
    }

    /**
     * The courseoffering where this componentoffering is related to. [&#x60;expandable&#x60;](#tag/course_offering_model) By default only the &#x60;courseOfferingId&#x60; (a string) is returned. If the client requested an expansion of &#x60;courseOffering&#x60; the full courseOffering object should be returned.
     * @return courseOffering
     **/

    @JsonProperty(JSON_PROPERTY_COURSE_OFFERING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCourseOffering() {
        return courseOffering;
    }

    @JsonProperty(JSON_PROPERTY_COURSE_OFFERING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCourseOffering(String courseOffering) {
        this.courseOffering = courseOffering;
    }

    public ComponentOfferingAllOf organization(String organization) {

        this.organization = organization;
        return this;
    }

    /**
     * The organization that manages this componentoffering. [&#x60;expandable&#x60;](#tag/organization_model) By default only the &#x60;organizationId&#x60; (a string) is returned. If the client requested an expansion of &#x60;organization&#x60; the full organization object should be returned.
     * @return organization
     **/

    @JsonProperty(JSON_PROPERTY_ORGANIZATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getOrganization() {
        return organization;
    }

    @JsonProperty(JSON_PROPERTY_ORGANIZATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrganization(String organization) {
        this.organization = organization;
    }

    public ComponentOfferingAllOf academicSession(String academicSession) {

        this.academicSession = academicSession;
        return this;
    }

    /**
     * The academicsession during which this componentoffering takes place. [&#x60;expandable&#x60;](#tag/academic_session_model) By default only the &#x60;academicSessionId&#x60; (a string) is returned. If the client requested an expansion of &#x60;academicSession&#x60; the full academicsession object should be returned.
     * @return academicSession
     **/

    @JsonProperty(JSON_PROPERTY_ACADEMIC_SESSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAcademicSession() {
        return academicSession;
    }

    @JsonProperty(JSON_PROPERTY_ACADEMIC_SESSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAcademicSession(String academicSession) {
        this.academicSession = academicSession;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ComponentOfferingAllOf componentOfferingAllOf = (ComponentOfferingAllOf) o;
        return Objects.equals(this.startDateTime, componentOfferingAllOf.startDateTime) &&
                Objects.equals(this.endDateTime, componentOfferingAllOf.endDateTime) &&
                Objects.equals(this.enrollStartDate, componentOfferingAllOf.enrollStartDate) &&
                Objects.equals(this.enrollEndDate, componentOfferingAllOf.enrollEndDate) &&
                Objects.equals(this.resultWeight, componentOfferingAllOf.resultWeight) &&
                Objects.equals(this.addresses, componentOfferingAllOf.addresses) &&
                Objects.equals(this.priceInformation, componentOfferingAllOf.priceInformation) &&
                Objects.equals(this.room, componentOfferingAllOf.room) &&
                Objects.equals(this.component, componentOfferingAllOf.component) &&
                Objects.equals(this.courseOffering, componentOfferingAllOf.courseOffering) &&
                Objects.equals(this.organization, componentOfferingAllOf.organization) &&
                Objects.equals(this.academicSession, componentOfferingAllOf.academicSession);
    }

    @Override
    public int hashCode() {
        return Objects.hash(startDateTime, endDateTime, enrollStartDate, enrollEndDate, resultWeight, addresses, priceInformation, room, component,
                courseOffering, organization, academicSession);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ComponentOfferingAllOf {\n");
        sb.append("    startDateTime: ").append(toIndentedString(startDateTime)).append("\n");
        sb.append("    endDateTime: ").append(toIndentedString(endDateTime)).append("\n");
        sb.append("    enrollStartDate: ").append(toIndentedString(enrollStartDate)).append("\n");
        sb.append("    enrollEndDate: ").append(toIndentedString(enrollEndDate)).append("\n");
        sb.append("    resultWeight: ").append(toIndentedString(resultWeight)).append("\n");
        sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
        sb.append("    priceInformation: ").append(toIndentedString(priceInformation)).append("\n");
        sb.append("    room: ").append(toIndentedString(room)).append("\n");
        sb.append("    component: ").append(toIndentedString(component)).append("\n");
        sb.append("    courseOffering: ").append(toIndentedString(courseOffering)).append("\n");
        sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
        sb.append("    academicSession: ").append(toIndentedString(academicSession)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}


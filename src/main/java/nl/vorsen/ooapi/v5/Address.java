/*
 * Open Education API
 * OpenAPI (fka Swagger) specification for the Open Education API.  <figure>  <a target=\"_blank\" href=\"OOAPIv5_model.png\">   <img src=\"OOAPIv5_model.png\" alt=\"OOAPI information model that feeds OOAPI specification\" width=\"70%\" class=\"img-responsive\">   </a>   <figcaption> OOAPI information model that feeds OOAPI specification (click to enlage)</figcaption> </figure>  The model provides an overview of how the objects on which the API is specified are related. The overarching concept educations is not found in the in the end points of the API. The smaller concepts of programOffering, courseOffering and conceptOffering are all found in the offering endpoint. The different types of association can all be found in the association endpoint.  The original file for this model can be found <a target=\"_blank\" href=\"OOAPIv5_model_v0.4.drawio\">here</a>  The program relations object is not found as a separate endpoint but relations between programs can be found within the program endpoint by expanding that endpoint.  Information about earlier meetings and presentations can be found <a target=\"_blank\" href=\"https://github.com/open-education-api/notulen\">here</a>  Information on the EDU-API model that was also used for this api is shown <a target=\"_blank\" href=\"eduapi.png\">here</a>
 *
 * The version of the OpenAPI document: 5.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nl.vorsen.ooapi.v5;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The full street address
 */

@JsonPropertyOrder({
        Address.JSON_PROPERTY_ADDRESS_TYPE,
        Address.JSON_PROPERTY_STREET,
        Address.JSON_PROPERTY_STREET_NUMBER,
        Address.JSON_PROPERTY_ADDITIONAL,
        Address.JSON_PROPERTY_POSTAL_CODE,
        Address.JSON_PROPERTY_CITY,
        Address.JSON_PROPERTY_COUNTRY_CODE,
        Address.JSON_PROPERTY_GEOLOCATION,
        Address.JSON_PROPERTY_EXT
})

public class Address {
    public static final String JSON_PROPERTY_ADDRESS_TYPE = "addressType";
    public static final String JSON_PROPERTY_STREET = "street";
    public static final String JSON_PROPERTY_STREET_NUMBER = "streetNumber";
    public static final String JSON_PROPERTY_ADDITIONAL = "additional";
    public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
    public static final String JSON_PROPERTY_CITY = "city";
    public static final String JSON_PROPERTY_COUNTRY_CODE = "countryCode";
    public static final String JSON_PROPERTY_GEOLOCATION = "geolocation";
    public static final String JSON_PROPERTY_EXT = "ext";
    private AddressType addressType;
    private String street;
    private String streetNumber;
    private List<LanguageTypedString> additional = null;
    private String postalCode;
    private String city;
    private String countryCode;
    private AddressGeolocation geolocation;
    private Object ext;

    public Address() {
    }

    public Address addressType(AddressType addressType) {

        this.addressType = addressType;
        return this;
    }

    /**
     * Get addressType
     * @return addressType
     **/
    @NotNull

    @JsonProperty(JSON_PROPERTY_ADDRESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public AddressType getAddressType() {
        return addressType;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAddressType(AddressType addressType) {
        this.addressType = addressType;
    }

    public Address street(String street) {

        this.street = street;
        return this;
    }

    /**
     * The street name
     * @return street
     **/

    @JsonProperty(JSON_PROPERTY_STREET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getStreet() {
        return street;
    }

    @JsonProperty(JSON_PROPERTY_STREET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStreet(String street) {
        this.street = street;
    }

    public Address streetNumber(String streetNumber) {

        this.streetNumber = streetNumber;
        return this;
    }

    /**
     * The street number
     * @return streetNumber
     **/

    @JsonProperty(JSON_PROPERTY_STREET_NUMBER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getStreetNumber() {
        return streetNumber;
    }

    @JsonProperty(JSON_PROPERTY_STREET_NUMBER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStreetNumber(String streetNumber) {
        this.streetNumber = streetNumber;
    }

    public Address additional(List<LanguageTypedString> additional) {

        this.additional = additional;
        return this;
    }

    public Address addAdditionalItem(LanguageTypedString additionalItem) {
        if (this.additional == null) {
            this.additional = new ArrayList<>();
        }
        this.additional.add(additionalItem);
        return this;
    }

    /**
     * Further details like building name, suite, apartment number, etc.
     * @return additional
     **/

    @JsonProperty(JSON_PROPERTY_ADDITIONAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<LanguageTypedString> getAdditional() {
        return additional;
    }

    @JsonProperty(JSON_PROPERTY_ADDITIONAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdditional(List<LanguageTypedString> additional) {
        this.additional = additional;
    }

    public Address postalCode(String postalCode) {

        this.postalCode = postalCode;
        return this;
    }

    /**
     * Postal code
     * @return postalCode
     **/

    @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPostalCode() {
        return postalCode;
    }

    @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    public Address city(String city) {

        this.city = city;
        return this;
    }

    /**
     * name of the city / locality
     * @return city
     **/

    @JsonProperty(JSON_PROPERTY_CITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCity() {
        return city;
    }

    @JsonProperty(JSON_PROPERTY_CITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCity(String city) {
        this.city = city;
    }

    public Address countryCode(String countryCode) {

        this.countryCode = countryCode;
        return this;
    }

    /**
     * the country code according to [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     * @return countryCode
     **/

    @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCountryCode() {
        return countryCode;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    public Address geolocation(AddressGeolocation geolocation) {

        this.geolocation = geolocation;
        return this;
    }

    /**
     * Get geolocation
     * @return geolocation
     **/

    @JsonProperty(JSON_PROPERTY_GEOLOCATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AddressGeolocation getGeolocation() {
        return geolocation;
    }

    @JsonProperty(JSON_PROPERTY_GEOLOCATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeolocation(AddressGeolocation geolocation) {
        this.geolocation = geolocation;
    }

    public Address ext(Object ext) {

        this.ext = ext;
        return this;
    }

    /**
     * Object for additional non-standard attributes
     * @return ext
     **/

    @JsonProperty(JSON_PROPERTY_EXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getExt() {
        return ext;
    }

    @JsonProperty(JSON_PROPERTY_EXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExt(Object ext) {
        this.ext = ext;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Address address = (Address) o;
        return Objects.equals(this.addressType, address.addressType) &&
                Objects.equals(this.street, address.street) &&
                Objects.equals(this.streetNumber, address.streetNumber) &&
                Objects.equals(this.additional, address.additional) &&
                Objects.equals(this.postalCode, address.postalCode) &&
                Objects.equals(this.city, address.city) &&
                Objects.equals(this.countryCode, address.countryCode) &&
                Objects.equals(this.geolocation, address.geolocation) &&
                Objects.equals(this.ext, address.ext);
    }

    @Override
    public int hashCode() {
        return Objects.hash(addressType, street, streetNumber, additional, postalCode, city, countryCode, geolocation, ext);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Address {\n");
        sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
        sb.append("    street: ").append(toIndentedString(street)).append("\n");
        sb.append("    streetNumber: ").append(toIndentedString(streetNumber)).append("\n");
        sb.append("    additional: ").append(toIndentedString(additional)).append("\n");
        sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
        sb.append("    geolocation: ").append(toIndentedString(geolocation)).append("\n");
        sb.append("    ext: ").append(toIndentedString(ext)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}


/*
 * Open Education API
 * OpenAPI (fka Swagger) specification for the Open Education API.  <figure>  <a target=\"_blank\" href=\"OOAPIv5_model.png\">   <img src=\"OOAPIv5_model.png\" alt=\"OOAPI information model that feeds OOAPI specification\" width=\"70%\" class=\"img-responsive\">   </a>   <figcaption> OOAPI information model that feeds OOAPI specification (click to enlage)</figcaption> </figure>  The model provides an overview of how the objects on which the API is specified are related. The overarching concept educations is not found in the in the end points of the API. The smaller concepts of programOffering, courseOffering and conceptOffering are all found in the offering endpoint. The different types of association can all be found in the association endpoint.  The original file for this model can be found <a target=\"_blank\" href=\"OOAPIv5_model_v0.4.drawio\">here</a>  The program relations object is not found as a separate endpoint but relations between programs can be found within the program endpoint by expanding that endpoint.  Information about earlier meetings and presentations can be found <a target=\"_blank\" href=\"https://github.com/open-education-api/notulen\">here</a>  Information on the EDU-API model that was also used for this api is shown <a target=\"_blank\" href=\"eduapi.png\">here</a>
 *
 * The version of the OpenAPI document: 5.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nl.vorsen.ooapi;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * A component is a part of a course
 */

@JsonPropertyOrder({
        Component.JSON_PROPERTY_COMPONENT_ID,
        Component.JSON_PROPERTY_PRIMARY_CODE,
        Component.JSON_PROPERTY_COMPONENT_TYPE,
        Component.JSON_PROPERTY_NAME,
        Component.JSON_PROPERTY_ABBREVIATION,
        Component.JSON_PROPERTY_MODE_OF_DELIVERY,
        Component.JSON_PROPERTY_DURATION,
        Component.JSON_PROPERTY_DESCRIPTION,
        Component.JSON_PROPERTY_TEACHING_LANGUAGE,
        Component.JSON_PROPERTY_LEARNING_OUTCOMES,
        Component.JSON_PROPERTY_ENROLLMENT,
        Component.JSON_PROPERTY_RESOURCES,
        Component.JSON_PROPERTY_ASSESSMENT,
        Component.JSON_PROPERTY_ADDRESSES,
        Component.JSON_PROPERTY_OTHER_CODES,
        Component.JSON_PROPERTY_COURSE,
        Component.JSON_PROPERTY_ORGANIZATION,
        Component.JSON_PROPERTY_CONSUMERS,
        Component.JSON_PROPERTY_EXT
})

public class Component {
    public static final String JSON_PROPERTY_COMPONENT_ID = "componentId";
    public static final String JSON_PROPERTY_PRIMARY_CODE = "primaryCode";
    public static final String JSON_PROPERTY_COMPONENT_TYPE = "componentType";
    public static final String JSON_PROPERTY_NAME = "name";
    public static final String JSON_PROPERTY_ABBREVIATION = "abbreviation";
    public static final String JSON_PROPERTY_MODE_OF_DELIVERY = "modeOfDelivery";
    public static final String JSON_PROPERTY_DURATION = "duration";
    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    public static final String JSON_PROPERTY_TEACHING_LANGUAGE = "teachingLanguage";
    public static final String JSON_PROPERTY_LEARNING_OUTCOMES = "learningOutcomes";
    public static final String JSON_PROPERTY_ENROLLMENT = "enrollment";
    public static final String JSON_PROPERTY_RESOURCES = "resources";
    public static final String JSON_PROPERTY_ASSESSMENT = "assessment";
    public static final String JSON_PROPERTY_ADDRESSES = "addresses";
    public static final String JSON_PROPERTY_OTHER_CODES = "otherCodes";
    public static final String JSON_PROPERTY_COURSE = "course";
    public static final String JSON_PROPERTY_ORGANIZATION = "organization";
    public static final String JSON_PROPERTY_CONSUMERS = "consumers";
    public static final String JSON_PROPERTY_EXT = "ext";
    private UUID componentId;
    private IdentifierEntry primaryCode;
    private ComponentType componentType;
    private List<LanguageTypedString> name = new ArrayList<>();
    private String abbreviation;
    private List<ModeOfDeliveryEnum> modeOfDelivery = null;
    private String duration;
    private List<LanguageTypedString> description = null;
    private String teachingLanguage;
    private List<List<LanguageTypedString>> learningOutcomes = null;
    private List<LanguageTypedString> enrollment = null;
    private List<String> resources = null;
    private List<LanguageTypedString> assessment = null;
    private List<Address> addresses = null;
    private List<IdentifierEntry> otherCodes = null;
    private ComponentCourse course;
    private ComponentOrganization organization;
    private List<Consumer> consumers = null;
    private Object ext;
    public Component() {
    }

    @JsonCreator
    public Component(
            @JsonProperty(JSON_PROPERTY_COMPONENT_ID) UUID componentId
    ) {
        this();
        this.componentId = componentId;
    }

    /**
     * Unique id of this component
     * @return componentId
     **/
    @NotNull

    @JsonProperty(JSON_PROPERTY_COMPONENT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public UUID getComponentId() {
        return componentId;
    }

    public Component primaryCode(IdentifierEntry primaryCode) {

        this.primaryCode = primaryCode;
        return this;
    }

    /**
     * Get primaryCode
     * @return primaryCode
     **/
    @NotNull

    @JsonProperty(JSON_PROPERTY_PRIMARY_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public IdentifierEntry getPrimaryCode() {
        return primaryCode;
    }

    @JsonProperty(JSON_PROPERTY_PRIMARY_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPrimaryCode(IdentifierEntry primaryCode) {
        this.primaryCode = primaryCode;
    }

    public Component componentType(ComponentType componentType) {

        this.componentType = componentType;
        return this;
    }

    /**
     * Get componentType
     * @return componentType
     **/
    @NotNull

    @JsonProperty(JSON_PROPERTY_COMPONENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public ComponentType getComponentType() {
        return componentType;
    }

    @JsonProperty(JSON_PROPERTY_COMPONENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setComponentType(ComponentType componentType) {
        this.componentType = componentType;
    }

    public Component name(List<LanguageTypedString> name) {

        this.name = name;
        return this;
    }

    public Component addNameItem(LanguageTypedString nameItem) {
        this.name.add(nameItem);
        return this;
    }

    /**
     * The name of this component
     * @return name
     **/
    @NotNull

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<LanguageTypedString> getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(List<LanguageTypedString> name) {
        this.name = name;
    }

    public Component abbreviation(String abbreviation) {

        this.abbreviation = abbreviation;
        return this;
    }

    /**
     * The abbreviation of this component
     * @return abbreviation
     **/
    @NotNull

    @JsonProperty(JSON_PROPERTY_ABBREVIATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getAbbreviation() {
        return abbreviation;
    }

    @JsonProperty(JSON_PROPERTY_ABBREVIATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAbbreviation(String abbreviation) {
        this.abbreviation = abbreviation;
    }

    public Component modeOfDelivery(List<ModeOfDeliveryEnum> modeOfDelivery) {

        this.modeOfDelivery = modeOfDelivery;
        return this;
    }

    public Component addModeOfDeliveryItem(ModeOfDeliveryEnum modeOfDeliveryItem) {
        if (this.modeOfDelivery == null) {
            this.modeOfDelivery = new ArrayList<>();
        }
        this.modeOfDelivery.add(modeOfDeliveryItem);
        return this;
    }

    /**
     * The mode of delivery of the component (ECTS-mode of delivery) - distance-learning: afstandsleren - on campus: op de campus - online: online - hybrid: hybride - situated: op locatie
     * @return modeOfDelivery
     **/

    @JsonProperty(JSON_PROPERTY_MODE_OF_DELIVERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<ModeOfDeliveryEnum> getModeOfDelivery() {
        return modeOfDelivery;
    }

    @JsonProperty(JSON_PROPERTY_MODE_OF_DELIVERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setModeOfDelivery(List<ModeOfDeliveryEnum> modeOfDelivery) {
        this.modeOfDelivery = modeOfDelivery;
    }

    public Component duration(String duration) {

        this.duration = duration;
        return this;
    }

    /**
     * The duration of this component. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.
     * @return duration
     **/

    @JsonProperty(JSON_PROPERTY_DURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDuration() {
        return duration;
    }

    @JsonProperty(JSON_PROPERTY_DURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDuration(String duration) {
        this.duration = duration;
    }

    public Component description(List<LanguageTypedString> description) {

        this.description = description;
        return this;
    }

    public Component addDescriptionItem(LanguageTypedString descriptionItem) {
        if (this.description == null) {
            this.description = new ArrayList<>();
        }
        this.description.add(descriptionItem);
        return this;
    }

    /**
     * The description of this component.
     * @return description
     **/

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<LanguageTypedString> getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(List<LanguageTypedString> description) {
        this.description = description;
    }

    public Component teachingLanguage(String teachingLanguage) {

        this.teachingLanguage = teachingLanguage;
        return this;
    }

    /**
     * The (primary) teaching language in which this component is given, should be a three-letter language code as specified by ISO 639-2.
     * @return teachingLanguage
     **/
    @NotNull

    @JsonProperty(JSON_PROPERTY_TEACHING_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getTeachingLanguage() {
        return teachingLanguage;
    }

    @JsonProperty(JSON_PROPERTY_TEACHING_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTeachingLanguage(String teachingLanguage) {
        this.teachingLanguage = teachingLanguage;
    }

    public Component learningOutcomes(List<List<LanguageTypedString>> learningOutcomes) {

        this.learningOutcomes = learningOutcomes;
        return this;
    }

    public Component addLearningOutcomesItem(List<LanguageTypedString> learningOutcomesItem) {
        if (this.learningOutcomes == null) {
            this.learningOutcomes = new ArrayList<>();
        }
        this.learningOutcomes.add(learningOutcomesItem);
        return this;
    }

    /**
     * Statements that describe the knowledge or skills students should acquire by the end of a particular course (ECTS-learningoutcome).
     * @return learningOutcomes
     **/

    @JsonProperty(JSON_PROPERTY_LEARNING_OUTCOMES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<List<LanguageTypedString>> getLearningOutcomes() {
        return learningOutcomes;
    }

    @JsonProperty(JSON_PROPERTY_LEARNING_OUTCOMES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLearningOutcomes(List<List<LanguageTypedString>> learningOutcomes) {
        this.learningOutcomes = learningOutcomes;
    }

    public Component enrollment(List<LanguageTypedString> enrollment) {

        this.enrollment = enrollment;
        return this;
    }

    public Component addEnrollmentItem(LanguageTypedString enrollmentItem) {
        if (this.enrollment == null) {
            this.enrollment = new ArrayList<>();
        }
        this.enrollment.add(enrollmentItem);
        return this;
    }

    /**
     * The extra information that is provided for enrollment
     * @return enrollment
     **/

    @JsonProperty(JSON_PROPERTY_ENROLLMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<LanguageTypedString> getEnrollment() {
        return enrollment;
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEnrollment(List<LanguageTypedString> enrollment) {
        this.enrollment = enrollment;
    }

    public Component resources(List<String> resources) {

        this.resources = resources;
        return this;
    }

    public Component addResourcesItem(String resourcesItem) {
        if (this.resources == null) {
            this.resources = new ArrayList<>();
        }
        this.resources.add(resourcesItem);
        return this;
    }

    /**
     * An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)
     * @return resources
     **/

    @JsonProperty(JSON_PROPERTY_RESOURCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getResources() {
        return resources;
    }

    @JsonProperty(JSON_PROPERTY_RESOURCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResources(List<String> resources) {
        this.resources = resources;
    }

    public Component assessment(List<LanguageTypedString> assessment) {

        this.assessment = assessment;
        return this;
    }

    public Component addAssessmentItem(LanguageTypedString assessmentItem) {
        if (this.assessment == null) {
            this.assessment = new ArrayList<>();
        }
        this.assessment.add(assessmentItem);
        return this;
    }

    /**
     * A description of the way exams for this course are taken (ECTS-assessment method and criteria).
     * @return assessment
     **/

    @JsonProperty(JSON_PROPERTY_ASSESSMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<LanguageTypedString> getAssessment() {
        return assessment;
    }

    @JsonProperty(JSON_PROPERTY_ASSESSMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAssessment(List<LanguageTypedString> assessment) {
        this.assessment = assessment;
    }

    public Component addresses(List<Address> addresses) {

        this.addresses = addresses;
        return this;
    }

    public Component addAddressesItem(Address addressesItem) {
        if (this.addresses == null) {
            this.addresses = new ArrayList<>();
        }
        this.addresses.add(addressesItem);
        return this;
    }

    /**
     * Addresses for this component
     * @return addresses
     **/

    @JsonProperty(JSON_PROPERTY_ADDRESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Address> getAddresses() {
        return addresses;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAddresses(List<Address> addresses) {
        this.addresses = addresses;
    }

    public Component otherCodes(List<IdentifierEntry> otherCodes) {

        this.otherCodes = otherCodes;
        return this;
    }

    public Component addOtherCodesItem(IdentifierEntry otherCodesItem) {
        if (this.otherCodes == null) {
            this.otherCodes = new ArrayList<>();
        }
        this.otherCodes.add(otherCodesItem);
        return this;
    }

    /**
     * An array of additional human readable codes/identifiers for the entity being described.
     * @return otherCodes
     **/

    @JsonProperty(JSON_PROPERTY_OTHER_CODES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<IdentifierEntry> getOtherCodes() {
        return otherCodes;
    }

    @JsonProperty(JSON_PROPERTY_OTHER_CODES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOtherCodes(List<IdentifierEntry> otherCodes) {
        this.otherCodes = otherCodes;
    }

    public Component course(ComponentCourse course) {

        this.course = course;
        return this;
    }

    /**
     * Get course
     * @return course
     **/

    @JsonProperty(JSON_PROPERTY_COURSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ComponentCourse getCourse() {
        return course;
    }

    @JsonProperty(JSON_PROPERTY_COURSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCourse(ComponentCourse course) {
        this.course = course;
    }

    public Component organization(ComponentOrganization organization) {

        this.organization = organization;
        return this;
    }

    /**
     * Get organization
     * @return organization
     **/

    @JsonProperty(JSON_PROPERTY_ORGANIZATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ComponentOrganization getOrganization() {
        return organization;
    }

    @JsonProperty(JSON_PROPERTY_ORGANIZATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrganization(ComponentOrganization organization) {
        this.organization = organization;
    }

    public Component consumers(List<Consumer> consumers) {

        this.consumers = consumers;
        return this;
    }

    public Component addConsumersItem(Consumer consumersItem) {
        if (this.consumers == null) {
            this.consumers = new ArrayList<>();
        }
        this.consumers.add(consumersItem);
        return this;
    }

    /**
     * The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.
     * @return consumers
     **/

    @JsonProperty(JSON_PROPERTY_CONSUMERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Consumer> getConsumers() {
        return consumers;
    }

    @JsonProperty(JSON_PROPERTY_CONSUMERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConsumers(List<Consumer> consumers) {
        this.consumers = consumers;
    }

    public Component ext(Object ext) {

        this.ext = ext;
        return this;
    }

    /**
     * Object for additional non-standard attributes
     * @return ext
     **/

    @JsonProperty(JSON_PROPERTY_EXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getExt() {
        return ext;
    }

    @JsonProperty(JSON_PROPERTY_EXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExt(Object ext) {
        this.ext = ext;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Component component = (Component) o;
        return Objects.equals(this.componentId, component.componentId) &&
                Objects.equals(this.primaryCode, component.primaryCode) &&
                Objects.equals(this.componentType, component.componentType) &&
                Objects.equals(this.name, component.name) &&
                Objects.equals(this.abbreviation, component.abbreviation) &&
                Objects.equals(this.modeOfDelivery, component.modeOfDelivery) &&
                Objects.equals(this.duration, component.duration) &&
                Objects.equals(this.description, component.description) &&
                Objects.equals(this.teachingLanguage, component.teachingLanguage) &&
                Objects.equals(this.learningOutcomes, component.learningOutcomes) &&
                Objects.equals(this.enrollment, component.enrollment) &&
                Objects.equals(this.resources, component.resources) &&
                Objects.equals(this.assessment, component.assessment) &&
                Objects.equals(this.addresses, component.addresses) &&
                Objects.equals(this.otherCodes, component.otherCodes) &&
                Objects.equals(this.course, component.course) &&
                Objects.equals(this.organization, component.organization) &&
                Objects.equals(this.consumers, component.consumers) &&
                Objects.equals(this.ext, component.ext);
    }

    @Override
    public int hashCode() {
        return Objects.hash(componentId, primaryCode, componentType, name, abbreviation, modeOfDelivery, duration, description, teachingLanguage,
                learningOutcomes, enrollment, resources, assessment, addresses, otherCodes, course, organization, consumers, ext);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Component {\n");
        sb.append("    componentId: ").append(toIndentedString(componentId)).append("\n");
        sb.append("    primaryCode: ").append(toIndentedString(primaryCode)).append("\n");
        sb.append("    componentType: ").append(toIndentedString(componentType)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    abbreviation: ").append(toIndentedString(abbreviation)).append("\n");
        sb.append("    modeOfDelivery: ").append(toIndentedString(modeOfDelivery)).append("\n");
        sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    teachingLanguage: ").append(toIndentedString(teachingLanguage)).append("\n");
        sb.append("    learningOutcomes: ").append(toIndentedString(learningOutcomes)).append("\n");
        sb.append("    enrollment: ").append(toIndentedString(enrollment)).append("\n");
        sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
        sb.append("    assessment: ").append(toIndentedString(assessment)).append("\n");
        sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
        sb.append("    otherCodes: ").append(toIndentedString(otherCodes)).append("\n");
        sb.append("    course: ").append(toIndentedString(course)).append("\n");
        sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
        sb.append("    consumers: ").append(toIndentedString(consumers)).append("\n");
        sb.append("    ext: ").append(toIndentedString(ext)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets modeOfDelivery
     */
    public enum ModeOfDeliveryEnum {
        DISTANCE_LEARNING("distance-learning"),

        ON_CAMPUS("on campus"),

        ONLINE("online"),

        HYBRID("hybrid"),

        SITUATED("situated");

        private final String value;

        ModeOfDeliveryEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static ModeOfDeliveryEnum fromValue(String value) {
            for (ModeOfDeliveryEnum b : ModeOfDeliveryEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

}

